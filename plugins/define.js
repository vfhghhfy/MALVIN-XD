// Kode disesuaikan oleh Z4cK ‚ö°
const handler = async (Z4cKmsg, { text: ZackText, command: Z4cKcmd, conn: ZackConn, args: Z4cKargs }) => {
  if (!ZackText) return ZackConn.reply(Z4cKmsg.chat, `*‚ùê„Äéüé≠„Äè*\n*Contoh ‚ïø‚Ü∂*\n*‚îá‚Üû„Äé .${Z4cKcmd} Tautan channel + Teks reaksi „Äè*\n\n> By Z4cK ‚ö°`, Z4cKmsg);

  console.log(`Perintah diterima: ${Z4cKcmd}, teks: ${ZackText}`);

  await ZackConn.sendMessage(Z4cKmsg.chat, { react: { text: 'üïí', key: Z4cKmsg.key } });

  const Z4cKstyledMap = {
    a: 'üÑ∞', b: 'üÑ±', c: 'üÑ≤', d: 'üÑ≥', e: 'üÑ¥', f: 'üÑµ', g: 'üÑ∂',
    h: 'üÑ∑', i: 'üÑ∏', j: 'üÑπ', k: 'üÑ∫', l: 'üÑª', m: 'üÑº', n: 'üÑΩ',
    o: 'üÑæ', p: 'üÑø', q: 'üÖÄ', r: 'üÖÅ', s: 'üÖÇ', t: 'üÖÉ', u: 'üÖÑ',
    v: 'üÖÖ', w: 'üÖÜ', x: '‚ûñ', y: 'üÖà', z: 'üÖâ',
    '0': '‚ìø', '1': '‚ûä', '2': '‚ûã', '3': '‚ûå', '4': '‚ûç',
    '5': '‚ûé', '6': '‚ûè', '7': '‚ûê', '8': '‚ûë', '9': '‚ûí'
  };

  const [ZackMainText, Z4cKoffsetStr] = ZackText.split('|');
  const ZackLink = ZackMainText.trim().split(" ")[0];

  if (!ZackLink.includes("https://whatsapp.com/channel/")) {
    return ZackConn.reply(Z4cKmsg.chat, "‚ùå Tautan tidak valid!\nContoh: .reactch https://whatsapp.com/channel/xxx/id Pesan ‚ù§Ô∏è|5\n\n> By Z4cK ‚ö°", Z4cKmsg);
  }

  const Z4cKchannelID = ZackLink.split('/')[4];
  const ZackRawMsgID = parseInt(ZackLink.split('/')[5]);
  if (!Z4cKchannelID || isNaN(ZackRawMsgID)) return ZackConn.reply(Z4cKmsg.chat, "‚ùå Tautan tidak lengkap!\n\n> By Z4cK ‚ö°", Z4cKmsg);

  const ZackOffset = parseInt(Z4cKoffsetStr?.trim()) || 1;
  const Z4cKcleanText = ZackMainText.trim().split(" ").slice(1).join(' ');
  const ZackTextOnly = Z4cKcleanText.replace(ZackLink, '').trim();
  if (!ZackTextOnly) return ZackConn.reply(Z4cKmsg.chat, "‚ùå Masukkan teks atau emoji untuk bereaksi.\n\n> By Z4cK ‚ö°", Z4cKmsg);

  const ZackEmoji = ZackTextOnly.toLowerCase().split('').map(char => {
    if (char === ' ') return '‚Äï';
    return Z4cKstyledMap[char] || char;
  }).join('');

  try {
    const Z4cKmeta = await ZackConn.newsletterMetadata("invite", Z4cKchannelID);
    let ZackSuccess = 0, Z4cKfail = 0;

    for (let i = 0; i < ZackOffset; i++) {
      const ZackMsgId = (ZackRawMsgID - i).toString();
      try {
        await ZackConn.newsletterReactMessage(Z4cKmeta.id, ZackMsgId, ZackEmoji);
        ZackSuccess++;
      } catch (e) {
        Z4cKfail++;
      }
    }

    await ZackConn.reply(
      Z4cKmsg.chat, 
      `‚úÖ Berhasil bereaksi dengan *${ZackEmoji}* ke ${ZackSuccess} pesan di channel *${Z4cKmeta.name}*\n‚ùå Gagal bereaksi ke ${Z4cKfail} pesan.\n\n> By Z4cK ‚ö°`, 
      Z4cKmsg
    );
    await ZackConn.sendMessage(Z4cKmsg.chat, { react: { text: '‚úÖ', key: Z4cKmsg.key } });
  } catch (err) {
    console.error(err);
    await ZackConn.reply(Z4cKmsg.chat, "‚ùå Terjadi kesalahan saat bereaksi!\n\n> By Z4cK ‚ö°", Z4cKmsg);
    await ZackConn.sendMessage(Z4cKmsg.chat, { react: { text: '‚ùå', key: Z4cKmsg.key } });
  }
};

// Perintah oleh Z4cK ‚ö°
handler.command = ["reactch3", "react"];

export default handler;
